// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package longrunningmicroflowupdates.proxies;

public class Job
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject jobMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "LongRunningMicroflowUpdates.Job";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		CurrentStatus("CurrentStatus"),
		Status("Status"),
		JobID("JobID"),
		ProgressPercentage("ProgressPercentage");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Job(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "LongRunningMicroflowUpdates.Job"));
	}

	protected Job(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject jobMendixObject)
	{
		if (jobMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("LongRunningMicroflowUpdates.Job", jobMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a LongRunningMicroflowUpdates.Job");

		this.jobMendixObject = jobMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Job.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static longrunningmicroflowupdates.proxies.Job initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return longrunningmicroflowupdates.proxies.Job.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static longrunningmicroflowupdates.proxies.Job initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new longrunningmicroflowupdates.proxies.Job(context, mendixObject);
	}

	public static longrunningmicroflowupdates.proxies.Job load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return longrunningmicroflowupdates.proxies.Job.initialize(context, mendixObject);
	}

	public static java.util.List<longrunningmicroflowupdates.proxies.Job> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<longrunningmicroflowupdates.proxies.Job> result = new java.util.ArrayList<longrunningmicroflowupdates.proxies.Job>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//LongRunningMicroflowUpdates.Job" + xpathConstraint))
			result.add(longrunningmicroflowupdates.proxies.Job.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of CurrentStatus
	 */
	public final java.lang.String getCurrentStatus()
	{
		return getCurrentStatus(getContext());
	}

	/**
	 * @param context
	 * @return value of CurrentStatus
	 */
	public final java.lang.String getCurrentStatus(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.CurrentStatus.toString());
	}

	/**
	 * Set value of CurrentStatus
	 * @param currentstatus
	 */
	public final void setCurrentStatus(java.lang.String currentstatus)
	{
		setCurrentStatus(getContext(), currentstatus);
	}

	/**
	 * Set value of CurrentStatus
	 * @param context
	 * @param currentstatus
	 */
	public final void setCurrentStatus(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String currentstatus)
	{
		getMendixObject().setValue(context, MemberNames.CurrentStatus.toString(), currentstatus);
	}

	/**
	 * Set value of Status
	 * @param status
	 */
	public final longrunningmicroflowupdates.proxies.Status getStatus()
	{
		return getStatus(getContext());
	}

	/**
	 * @param context
	 * @return value of Status
	 */
	public final longrunningmicroflowupdates.proxies.Status getStatus(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Status.toString());
		if (obj == null)
			return null;

		return longrunningmicroflowupdates.proxies.Status.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Status
	 * @param status
	 */
	public final void setStatus(longrunningmicroflowupdates.proxies.Status status)
	{
		setStatus(getContext(), status);
	}

	/**
	 * Set value of Status
	 * @param context
	 * @param status
	 */
	public final void setStatus(com.mendix.systemwideinterfaces.core.IContext context, longrunningmicroflowupdates.proxies.Status status)
	{
		if (status != null)
			getMendixObject().setValue(context, MemberNames.Status.toString(), status.toString());
		else
			getMendixObject().setValue(context, MemberNames.Status.toString(), null);
	}

	/**
	 * @return value of JobID
	 */
	public final java.lang.Long getJobID()
	{
		return getJobID(getContext());
	}

	/**
	 * @param context
	 * @return value of JobID
	 */
	public final java.lang.Long getJobID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.JobID.toString());
	}

	/**
	 * Set value of JobID
	 * @param jobid
	 */
	public final void setJobID(java.lang.Long jobid)
	{
		setJobID(getContext(), jobid);
	}

	/**
	 * Set value of JobID
	 * @param context
	 * @param jobid
	 */
	public final void setJobID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long jobid)
	{
		getMendixObject().setValue(context, MemberNames.JobID.toString(), jobid);
	}

	/**
	 * @return value of ProgressPercentage
	 */
	public final java.math.BigDecimal getProgressPercentage()
	{
		return getProgressPercentage(getContext());
	}

	/**
	 * @param context
	 * @return value of ProgressPercentage
	 */
	public final java.math.BigDecimal getProgressPercentage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.ProgressPercentage.toString());
	}

	/**
	 * Set value of ProgressPercentage
	 * @param progresspercentage
	 */
	public final void setProgressPercentage(java.math.BigDecimal progresspercentage)
	{
		setProgressPercentage(getContext(), progresspercentage);
	}

	/**
	 * Set value of ProgressPercentage
	 * @param context
	 * @param progresspercentage
	 */
	public final void setProgressPercentage(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal progresspercentage)
	{
		getMendixObject().setValue(context, MemberNames.ProgressPercentage.toString(), progresspercentage);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return jobMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final longrunningmicroflowupdates.proxies.Job that = (longrunningmicroflowupdates.proxies.Job) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "LongRunningMicroflowUpdates.Job";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
